version: '3'
services:

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    expose:
      - 9090
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    expose:
      - 3000
    ports:
      - 3000:3000

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    hostname: mongodb
    ports:
      - 27017:27017
    expose:
      - "27017"

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    hostname: mysql
    environment:
      MYSQL_DATABASE: 'vendas'
      MYSQL_USER: 'vendas'
      MYSQL_PASSWORD: 'vendas123'
      MYSQL_ROOT_PASSWORD: 'vendas123'
    ports:
      - 3307:3306
    expose:
      - "3307"

  redis:
    container_name: redis
    image: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    expose:
      - "6379"

  jms:
    container_name: jms
    image: rmohr/activemq
    restart: always
    ports:
      - 6161:61616
      - 8161:8161
    expose:
      - "6161"
      - "8161"

  trace:
    container_name: trace
    image: jaegertracing/all-in-one:1.21
    restart: always
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - 9411:9411
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
    expose:
      - "9411"

  logspout:
    image: gliderlabs/logspout:v3
    command: 'udp://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    depends_on:
      - elasticsearch
      - logstash
      - kibana

  logstash:
    image: logstash:2.1.1
    environment:
      - STDOUT=true
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    command: 'logstash -e "input { udp { port => 5000 } } output { elasticsearch { hosts => elasticsearch } }"'

  kibana:
    image: kibana:4.1.2
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:1.5.2
    ports:
      - 9200:9200
      - 9300:9300